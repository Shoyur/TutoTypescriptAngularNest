{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CartComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r1.price));\n  }\n}\nexport class CartComponent {\n  // *** J'avais oublié \"private\" et donc\n  // l'instanciation cartService ne se faisait même pas\n  // et ça buggait ben raide\n  constructor(cartService, formBuilder, router) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.items = this.cartService.getItems();\n    // .group() = méthode pour créer plein de propriétés\n    // à l'objet FormBuilder\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  onSubmit() {\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    // besoin de reset si on reste sur la même page après avoir pesé submit\n    // sinon le fait de reload la page, remet les champs à vide\n    this.checkoutForm.reset();\n    // on import + constructor + ce chemin\n    // this.router.navigateByUrl('/')\n    // ou par son nom\n    this.router.navigate(['']);\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[\"routerLink\", \"/shipping\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"], [1, \"cart-item\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Panier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\")(3, \"a\", 0);\n      i0.ɵɵtext(4, \"Frais de livraison\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, CartComponent_div_5_Template, 6, 4, \"div\", 1);\n      i0.ɵɵelementStart(6, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CartComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Nom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Adresse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Payer\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.RouterLink, i4.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAIAA,8BAAkD;IAC1CA,YAAe;IAAAA,iBAAO;IAC5BA,4BAAM;IAAAA,YAA2B;;IAAAA,iBAAO;;;;IADlCA,eAAe;IAAfA,kCAAe;IACfA,eAA2B;IAA3BA,yDAA2B;;;ACInC,OAAM,MAAOC,aAAa;EAWxB;EACA;EACA;EACAC,YAAoBC,WAAwB,EAClCC,WAAwB,EACxBC,MAAc;IAFJ,gBAAW,GAAXF,WAAW;IACrB,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAdhB,UAAK,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;IAEnC;IACA;IACA,iBAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV,CAAC;EAOyB;EAEzBC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACR,WAAW,CAACS,SAAS,EAAE;IACzCC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;IACtE;IACA;IACA,IAAI,CAACD,YAAY,CAACE,KAAK,EAAE;IACzB;IACA;IACA;IACA,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;;AA5BSjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1BvB,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,yBAAG;MACuBA,kCAAkB;MAAAA,iBAAI;MAEhDA,8DAGM;MAENA,+BAAyD;MAAxBA;QAAA,OAAYwB,cAAU;MAAA,EAAC;MACtDxB,2BAAK;MACeA,mBAAG;MAAAA,iBAAQ;MAC7BA,4BAAoD;MACtDA,iBAAM;MACNA,4BAAK;MACkBA,wBAAO;MAAAA,iBAAQ;MACpCA,4BAA0D;MAC5DA,iBAAM;MACNA,kCAAqC;MAAAA,sBAAK;MAAAA,iBAAS;;;MAdbA,eAAQ;MAARA,mCAAQ;MAK1CA,eAA0B;MAA1BA,4CAA0B","names":["i0","CartComponent","constructor","cartService","formBuilder","router","getItems","group","name","address","onSubmit","items","clearCart","console","warn","checkoutForm","value","reset","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Angular\\Tuto1Cart\\src\\app\\cart\\cart.component.html","C:\\xampp\\htdocs\\Angular\\Tuto1Cart\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<h3>Panier</h3>\n<p>\n<a routerLink=\"/shipping\">Frais de livraison</a>\n</p>\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{ item.name }}</span>\n  <span>{{ item.price | currency }}</span>\n</div>\n\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"name\">Nom</label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n  <div>\n    <label for=\"address\">Adresse</label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\n  </div>\n  <button class=\"button\" type=\"submit\">Payer</button>\n</form>\n","import { Component } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n\n  items = this.cartService.getItems();\n\n  // .group() = méthode pour créer plein de propriétés\n  // à l'objet FormBuilder\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  // *** J'avais oublié \"private\" et donc\n  // l'instanciation cartService ne se faisait même pas\n  // et ça buggait ben raide\n  constructor(private cartService: CartService,\n    private formBuilder: FormBuilder,\n    private router: Router) {}\n  \n    onSubmit(): void {\n      this.items = this.cartService.clearCart();\n      console.warn('Your order has been submitted', this.checkoutForm.value);\n      // besoin de reset si on reste sur la même page après avoir pesé submit\n      // sinon le fait de reload la page, remet les champs à vide\n      this.checkoutForm.reset();\n      // on import + constructor + ce chemin\n      // this.router.navigateByUrl('/')\n      // ou par son nom\n      this.router.navigate(['']);\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}